
---------------------------------------------------CV AND MUTEX---------------------------------------------------
class Foo {

private:
    mutex myMutex;
    condition_variable myCv;
    int currIndex = 1;

    void orderPrints(int number) {
        unique_lock<mutex> lock(myMutex);
        while(number != currIndex) {
            myCv.wait(lock);
        }
    }

public:
    Foo() {
    }

    void first(function<void()> printFirst) {
        orderPrints(1);

        // printFirst() outputs "first". Do not change or remove this line.
        printFirst();
        ++currIndex;
        myCv.notify_all();
    }

    void second(function<void()> printSecond) {
        orderPrints(2);

        // printSecond() outputs "second". Do not change or remove this line.
        printSecond();
        ++currIndex;
        myCv.notify_all();
    }

    void third(function<void()> printThird) {
        orderPrints(3);

        // printThird() outputs "third". Do not change or remove this line.
        printThird();
        ++currIndex;
        myCv.notify_all();
    }
};



---------------------------------------------------MUTEX ONLY---------------------------------------------------
class Foo {

private:
    mutex myMutex;
    int currIndex = 1;

    bool orderPrints(int number) {
        myMutex.lock();
        if (currIndex == number) {
            ++currIndex;
            return true;
        }
        myMutex.unlock();
        return false;
    }

public:
    Foo() {
    }

    void first(function<void()> printFirst) {
        while(!orderPrints(1));

        // printFirst() outputs "first". Do not change or remove this line.
        printFirst();
        myMutex.unlock();
    }

    void second(function<void()> printSecond) {
        while(!orderPrints(2));

        // printSecond() outputs "second". Do not change or remove this line.
        printSecond();
        myMutex.unlock();
    }

    void third(function<void()> printThird) {
        while(!orderPrints(3));

        // printThird() outputs "third". Do not change or remove this line.
        printThird();
        myMutex.unlock();
    }
};
